@page "/weather"
@using Microsoft.AspNetCore.Mvc
@using Pattern
@using DataBank
@using Microsoft.AspNetCore.Mvc.Rendering
@using Microsoft.EntityFrameworkCore
@inject DBConnectionContext db

@rendermode InteractiveServer
@inject NavigationManager NavigationManager


<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>GameRent</title>
    <link href="style.css" rel="stylesheet" />
</head>


<!-- Header -->
<header class="header">
    <h1 class="logo">GAME<span class="text-purple">RENT</span></h1>
    <nav class="nav">
        <a href="https://localhost:7118/">Главная</a>
        <button class="btn-active"><a href="https://localhost:7118/weather">Каталог</a></button>
        <a href="https://localhost:7118/rent">Аренда</a>
    </nav>
</header>



<div class="section-ti">КАТАЛОГ   </div>
<select @bind="selectedCategoryId">
    <option value="">-- Категория --</option>
    @foreach (var category in _categories)
    {
    <option value="@category.ID">@category.Name</option>
    }
</select>

@if (_filteredGames.Any())
{
<section class="catalog">
    <div class="catalog-grid">
        @foreach (var game in _filteredGames)
        {
            <div class="game-card" >
                <img src="@game.Description" alt="@game.Title" />
                <p>@game.Title</p>
                <p class="price">@game.CategoryId </p>
                <a href="/rent?gameID=@game.GameID">
                <button class="arenda">Арендовать</button>
                </a>
                
            </div>
          
        }
    </div>
</section>
}
else if (selectedCategoryId != null)
{
<p>Нет игр в этой категории.</p>
}

@code {
    private List<Category> _categories = new();
    private List<Game> _filteredGames = new();
    private int? _selectedCategoryId;

    protected override void OnInitialized()
    {
        _categories = db.Categories.ToList();
    }

    private int? selectedCategoryId
    {
        get => _selectedCategoryId;
        set
        {
            _selectedCategoryId = value;
            LoadGamesByCategory();
        }
    }

    private void LoadGamesByCategory()
    {
        if (selectedCategoryId != null)
        {
            _filteredGames = db.Games
                .Where(g => g.CategoryId == selectedCategoryId)
                .ToList();
        }
        else
        {
            _filteredGames.Clear();
        }
    }
   
    
}
